// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"

	types "github.com/palomachain/paloma/x/evm/types"
	mock "github.com/stretchr/testify/mock"
)

// MsgSender is an autogenerated mock type for the MsgSender type
type MsgSender struct {
	mock.Mock
}

// SendValsetMsgForChain provides a mock function with given fields: ctx, chainInfo, valset, assignee
func (_m *MsgSender) SendValsetMsgForChain(ctx context.Context, chainInfo *types.ChainInfo, valset types.Valset, assignee string) error {
	ret := _m.Called(ctx, chainInfo, valset, assignee)

	if len(ret) == 0 {
		panic("no return value specified for SendValsetMsgForChain")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *types.ChainInfo, types.Valset, string) error); ok {
		r0 = rf(ctx, chainInfo, valset, assignee)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMsgSender creates a new instance of MsgSender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMsgSender(t interface {
	mock.TestingT
	Cleanup(func())
}) *MsgSender {
	mock := &MsgSender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
