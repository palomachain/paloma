// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	types "github.com/palomachain/paloma/x/metrix/types"
)

// MetrixKeeper is an autogenerated mock type for the MetrixKeeper type
type MetrixKeeper struct {
	mock.Mock
}

// Validators provides a mock function with given fields: goCtx, _a1
func (_m *MetrixKeeper) Validators(goCtx context.Context, _a1 *types.Empty) (*types.QueryValidatorsResponse, error) {
	ret := _m.Called(goCtx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Validators")
	}

	var r0 *types.QueryValidatorsResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *types.Empty) (*types.QueryValidatorsResponse, error)); ok {
		return rf(goCtx, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *types.Empty) *types.QueryValidatorsResponse); ok {
		r0 = rf(goCtx, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.QueryValidatorsResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *types.Empty) error); ok {
		r1 = rf(goCtx, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMetrixKeeper creates a new instance of MetrixKeeper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMetrixKeeper(t interface {
	mock.TestingT
	Cleanup(func())
}) *MetrixKeeper {
	mock := &MetrixKeeper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
