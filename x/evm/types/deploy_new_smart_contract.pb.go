// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: evm/deploy_new_smart_contract.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DeployNewSmartContract struct {
	ChainID  string `protobuf:"bytes,1,opt,name=chainID,proto3" json:"chainID,omitempty"`
	AbiJSON  string `protobuf:"bytes,2,opt,name=abiJSON,proto3" json:"abiJSON,omitempty"`
	Bytecode string `protobuf:"bytes,3,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
}

func (m *DeployNewSmartContract) Reset()         { *m = DeployNewSmartContract{} }
func (m *DeployNewSmartContract) String() string { return proto.CompactTextString(m) }
func (*DeployNewSmartContract) ProtoMessage()    {}
func (*DeployNewSmartContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_d28ff23b4538d919, []int{0}
}
func (m *DeployNewSmartContract) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeployNewSmartContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeployNewSmartContract.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeployNewSmartContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployNewSmartContract.Merge(m, src)
}
func (m *DeployNewSmartContract) XXX_Size() int {
	return m.Size()
}
func (m *DeployNewSmartContract) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployNewSmartContract.DiscardUnknown(m)
}

var xxx_messageInfo_DeployNewSmartContract proto.InternalMessageInfo

func (m *DeployNewSmartContract) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *DeployNewSmartContract) GetAbiJSON() string {
	if m != nil {
		return m.AbiJSON
	}
	return ""
}

func (m *DeployNewSmartContract) GetBytecode() string {
	if m != nil {
		return m.Bytecode
	}
	return ""
}

func init() {
	proto.RegisterType((*DeployNewSmartContract)(nil), "palomachain.paloma.evm.DeployNewSmartContract")
}

func init() {
	proto.RegisterFile("evm/deploy_new_smart_contract.proto", fileDescriptor_d28ff23b4538d919)
}

var fileDescriptor_d28ff23b4538d919 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4e, 0x2d, 0xcb, 0xd5,
	0x4f, 0x49, 0x2d, 0xc8, 0xc9, 0xaf, 0x8c, 0xcf, 0x4b, 0x2d, 0x8f, 0x2f, 0xce, 0x4d, 0x2c, 0x2a,
	0x89, 0x4f, 0xce, 0xcf, 0x2b, 0x29, 0x4a, 0x4c, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x12, 0x2b, 0x48, 0xcc, 0xc9, 0xcf, 0x4d, 0x4c, 0xce, 0x48, 0xcc, 0xcc, 0xd3, 0x83, 0xb0, 0xf5,
	0x52, 0xcb, 0x72, 0x95, 0x32, 0xb8, 0xc4, 0x5c, 0xc0, 0x5a, 0xfd, 0x52, 0xcb, 0x83, 0x41, 0x1a,
	0x9d, 0xa1, 0xfa, 0x84, 0x24, 0xb8, 0xd8, 0xc1, 0xaa, 0x3d, 0x5d, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0x60, 0x5c, 0x90, 0x4c, 0x62, 0x52, 0xa6, 0x57, 0xb0, 0xbf, 0x9f, 0x04, 0x13, 0x44,
	0x06, 0xca, 0x15, 0x92, 0xe2, 0xe2, 0x48, 0xaa, 0x2c, 0x49, 0x4d, 0xce, 0x4f, 0x49, 0x95, 0x60,
	0x06, 0x4b, 0xc1, 0xf9, 0x4e, 0xce, 0x27, 0x1e, 0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0,
	0x91, 0x1c, 0xe3, 0x84, 0xc7, 0x72, 0x0c, 0x17, 0x1e, 0xcb, 0x31, 0xdc, 0x78, 0x2c, 0xc7, 0x10,
	0xa5, 0x99, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab, 0x8f, 0xe4, 0x4c, 0x28,
	0x5b, 0xbf, 0x42, 0x1f, 0xe4, 0xc1, 0x92, 0xca, 0x82, 0xd4, 0xe2, 0x24, 0x36, 0xb0, 0x6f, 0x8c,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x4d, 0x21, 0xed, 0xf4, 0x00, 0x00, 0x00,
}

func (m *DeployNewSmartContract) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeployNewSmartContract) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeployNewSmartContract) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Bytecode) > 0 {
		i -= len(m.Bytecode)
		copy(dAtA[i:], m.Bytecode)
		i = encodeVarintDeployNewSmartContract(dAtA, i, uint64(len(m.Bytecode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AbiJSON) > 0 {
		i -= len(m.AbiJSON)
		copy(dAtA[i:], m.AbiJSON)
		i = encodeVarintDeployNewSmartContract(dAtA, i, uint64(len(m.AbiJSON)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainID) > 0 {
		i -= len(m.ChainID)
		copy(dAtA[i:], m.ChainID)
		i = encodeVarintDeployNewSmartContract(dAtA, i, uint64(len(m.ChainID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintDeployNewSmartContract(dAtA []byte, offset int, v uint64) int {
	offset -= sovDeployNewSmartContract(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DeployNewSmartContract) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainID)
	if l > 0 {
		n += 1 + l + sovDeployNewSmartContract(uint64(l))
	}
	l = len(m.AbiJSON)
	if l > 0 {
		n += 1 + l + sovDeployNewSmartContract(uint64(l))
	}
	l = len(m.Bytecode)
	if l > 0 {
		n += 1 + l + sovDeployNewSmartContract(uint64(l))
	}
	return n
}

func sovDeployNewSmartContract(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDeployNewSmartContract(x uint64) (n int) {
	return sovDeployNewSmartContract(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DeployNewSmartContract) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeployNewSmartContract
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeployNewSmartContract: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeployNewSmartContract: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeployNewSmartContract
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeployNewSmartContract
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeployNewSmartContract
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AbiJSON", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeployNewSmartContract
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeployNewSmartContract
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeployNewSmartContract
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AbiJSON = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytecode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeployNewSmartContract
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeployNewSmartContract
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeployNewSmartContract
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bytecode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeployNewSmartContract(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeployNewSmartContract
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDeployNewSmartContract(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDeployNewSmartContract
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeployNewSmartContract
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeployNewSmartContract
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDeployNewSmartContract
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDeployNewSmartContract
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDeployNewSmartContract
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDeployNewSmartContract        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDeployNewSmartContract          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDeployNewSmartContract = fmt.Errorf("proto: unexpected end of group")
)
