syntax = "proto3";
import "google/protobuf/any.proto";
import "gogoproto/gogo.proto";

package volumefi.paloma.consensus;

option go_package = "github.com/palomachain/paloma/x/consensus/types";

// message for storing the queued signed message in the internal queue
message QueuedSignedMessage {
  uint64 id = 1;
  google.protobuf.Any msg = 2;
  bytes bytesToSign = 3;
  repeated SignData signData = 4;
  repeated Evidence evidence = 5;

  PublicAccessData publicAccessData = 6;
}

message BatchOfConsensusMessages {
  google.protobuf.Any msg = 1;
}

message Batch {
  repeated google.protobuf.Any msgs = 1;
  bytes bytesToSign = 2;
}

message SignData {
  bytes valAddress = 1[ (gogoproto.casttype) =
                         "github.com/cosmos/cosmos-sdk/types.ValAddress" ];
  bytes signature = 2;
  bytes extraData = 3;

  string externalAccountAddress = 4;

  bytes publicKey = 5;
}

message Evidence {
  bytes valAddress = 1[ (gogoproto.casttype) =
                         "github.com/cosmos/cosmos-sdk/types.ValAddress" ];

  bytes proof = 2;
}

message PublicAccessData {
  bytes valAddress = 1[ (gogoproto.casttype) =
                         "github.com/cosmos/cosmos-sdk/types.ValAddress" ];
  bytes data = 2;
}
