syntax = "proto3";
package volumefi.paloma.consensus;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "consensus/params.proto";
import "consensus/consensus_queue.proto";
import "google/protobuf/any.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/palomachain/paloma/x/consensus/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/volumefi/paloma/consensus/params";
  }
  // Queries a list of QueuedMessagesForSigning items.
	rpc QueuedMessagesForSigning(QueryQueuedMessagesForSigningRequest) returns (QueryQueuedMessagesForSigningResponse) {
		option (google.api.http).get = "/volumefi/paloma/consensus/queued_messages_for_signing";
	}

// Queries a list of MessagesInQueue items.
	rpc MessagesInQueue(QueryMessagesInQueueRequest) returns (QueryMessagesInQueueResponse) {
		option (google.api.http).get = "/palomachain/paloma/consensus/messages_in_queue/{queueTypeName}";
	}

// Queries a list of GetAllQueueNames items.
	rpc GetAllQueueNames(QueryGetAllQueueNamesRequest) returns (QueryGetAllQueueNamesResponse) {
		option (google.api.http).get = "/palomachain/paloma/consensus/get_all_queue_names";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryQueuedMessagesForSigningRequest {
  bytes valAddress = 1 [ (gogoproto.casttype) =
                         "github.com/cosmos/cosmos-sdk/types.ValAddress" ];
  string queueTypeName = 2;
}

message QueryQueuedMessagesForSigningResponse {
  repeated MessageToSign messageToSign = 1;
}

message MessageToSign {
  bytes nonce = 1;
  uint64 id = 2;
  bytes bytesToSign = 3;
  google.protobuf.Any msg = 4;
}

message ValidatorSignature {
  bytes valAddress = 1[ (gogoproto.casttype) =
                         "github.com/cosmos/cosmos-sdk/types.ValAddress" ];
  bytes signature = 2;
  bytes extraData = 3;

  string externalAccountAddress = 4;
  bytes publicKey = 5;
}

message MessageWithSignatures {
  bytes nonce = 1;
  uint64 id = 2;
  google.protobuf.Any msg = 3;
  repeated ValidatorSignature signData = 4;
  bytes bytesToSign = 5;
}

message QueryMessagesInQueueRequest {
  string queueTypeName = 1;
}

message QueryMessagesInQueueResponse {
  repeated MessageWithSignatures messages = 1;
}

message QueryGetAllQueueNamesRequest {
}

message QueryGetAllQueueNamesResponse {
  repeated string queues = 1;
}

// this line is used by starport scaffolding # 3
