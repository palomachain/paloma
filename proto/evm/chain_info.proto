syntax = "proto3";

package palomachain.paloma.evm;

option go_package = "github.com/palomachain/paloma/x/evm/types";

message ChainInfo {
  uint64 id = 9999;

  string chainReferenceID = 1;
  
  uint64 chainID = 2;

  bytes smartContractUniqueID = 3;

  string smartContractAddr = 4;

  // used to verify by pigeons if they are at the correct chain
  uint64 referenceBlockHeight = 5;
  string referenceBlockHash = 6;

  string abi = 7;
  bytes bytecode = 8;
  bytes constructorInput = 9;
  enum Status {
    IN_PROPOSAL = 0;
    ACTIVE = 1;
    WAITING_FOR_EVIDENCE = 2;
  }
  Status status = 10;

  uint64 activeSmartContractID = 11;

}

message SmartContract {
  uint64 id = 1;
  string abiJSON = 2;
  bytes bytecode = 3;
}

message SmartContractDeployment {
  // which smart contract is getting deployed
  uint64 smartContractID = 1;

  // to which chain info the smart contract is getting deployed to
  string chainReferenceID = 2;

  // application level ID which uniquely identifies a deployed smart contract.
  // It's used if we have multiple smart contracts deployed on a same EVM so that
  // the contract can figure out if the message was actually sent for them.
  // (message includes the unique id and smart contract has simple logic to
  // disallow those that to not match)
  bytes uniqueID = 3;

}
