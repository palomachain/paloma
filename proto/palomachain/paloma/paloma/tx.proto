syntax = "proto3";
package palomachain.paloma.paloma;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";

import "palomachain/paloma/valset/common.proto";
import "palomachain/paloma/paloma/params.proto";

option go_package = "github.com/palomachain/paloma/v2/x/paloma/types";

service Msg {
  rpc AddStatusUpdate(MsgAddStatusUpdate) returns (EmptyResponse);

  rpc RegisterLightNodeClient(MsgRegisterLightNodeClient)
    returns (EmptyResponse);

  rpc AddLightNodeClientLicense(MsgAddLightNodeClientLicense)
    returns (EmptyResponse);

  rpc AuthLightNodeClient(MsgAuthLightNodeClient)
    returns (EmptyResponse);

  rpc SetLegacyLightNodeClients(MsgSetLegacyLightNodeClients)
    returns (EmptyResponse);

  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse) {
    option (google.api.http).put =
      "/palomachain/paloma/params";
    }
}

message MsgAddStatusUpdate {
  option (cosmos.msg.v1.signer) = "metadata";
  enum Level {
    LEVEL_DEBUG = 0;
    LEVEL_INFO = 1;
    LEVEL_ERROR = 2;
  }
  message KeyValuePair {
    string key = 1;
    string value = 2;
  }
  reserved 1;  
  reserved "creator";  
  string status = 2;
  Level level = 3;
  palomachain.paloma.valset.MsgMetadata metadata = 4
      [ (gogoproto.nullable) = false ];
  repeated KeyValuePair args = 5 [ (gogoproto.nullable) = false ];
}

message EmptyResponse {
}

message MsgRegisterLightNodeClient {
  option (cosmos.msg.v1.signer) = "metadata";
  palomachain.paloma.valset.MsgMetadata metadata = 1
      [ (gogoproto.nullable) = false ];
}

message MsgAddLightNodeClientLicense {
  option (cosmos.msg.v1.signer) = "metadata";
  palomachain.paloma.valset.MsgMetadata metadata = 1
      [ (gogoproto.nullable) = false ];

  string client_address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  cosmos.base.v1beta1.Coin amount = 3 [ (gogoproto.nullable) = false ];
  uint32 vesting_months = 4;
}

message MsgAuthLightNodeClient {
  option (cosmos.msg.v1.signer) = "metadata";
  palomachain.paloma.valset.MsgMetadata metadata = 1
      [ (gogoproto.nullable) = false ];
}

message MsgSetLegacyLightNodeClients {
  option (cosmos.msg.v1.signer) = "metadata";
  palomachain.paloma.valset.MsgMetadata metadata = 1
      [ (gogoproto.nullable) = false ];
}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // NOTE: All parameters must be supplied.
  Params params = 2 [ (gogoproto.nullable) = false ];

  palomachain.paloma.valset.MsgMetadata metadata = 3
      [ (gogoproto.nullable) = false ];
}

message MsgUpdateParamsResponse {}
