syntax = "proto3";
package palomachain.paloma.treasury;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos_proto/cosmos.proto";

import "palomachain/paloma/treasury/params.proto";
import "palomachain/paloma/treasury/fees.proto";

option go_package = "github.com/palomachain/paloma/x/treasury/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/palomachain/paloma/treasury/params";
  }

  rpc QueryFees(QueryFeesRequest) returns (Fees) {
    option (google.api.http).get = "/palomachain/paloma/treasury/fees";
  }

  // RelayerFee queries the fee settings of a validator participating in consensus.
  rpc RelayerFee(QueryRelayerFeeRequest) returns (RelayerFeeSetting) {
    option (google.api.http).get = "/palomachain/paloma/treasury/relayer-fee";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryFeesRequest {}

// QueryRelayerFeeRequest is the request type for the Query/RelayerFee RPC method.
message QueryRelayerFeeRequest {
  // val_address holds the validator address of the validator you want to query
  // for.
  string val_address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

