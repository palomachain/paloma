syntax = "proto3";
package palomachain.paloma.scheduler;

import "palomachain/paloma/scheduler/job.proto";
import "palomachain/paloma/valset/common.proto";
import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/palomachain/paloma/x/scheduler/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateJob(MsgCreateJob) returns (MsgCreateJobResponse);
  rpc ExecuteJob(MsgExecuteJob) returns (MsgExecuteJobResponse);
}

message MsgCreateJob {
  option (cosmos.msg.v1.signer) = "metadata";
  reserved 1;  
  reserved "creator"; 
  Job job = 2;
  palomachain.paloma.valset.MsgMetadata metadata = 3
      [ (gogoproto.nullable) = false ];
}

message MsgCreateJobResponse {}

message MsgExecuteJob {
  option (cosmos.msg.v1.signer) = "metadata";
  reserved 1;  
  reserved "creator";
  string jobID = 2;
  bytes payload = 3;
  palomachain.paloma.valset.MsgMetadata metadata = 4
      [ (gogoproto.nullable) = false ];
}

message MsgExecuteJobResponse {
  // points to the ID of the consensus queue message created from the job
  // execution
  uint64 messageID = 1;
}
