syntax = "proto3";
import "google/protobuf/any.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

package palomachain.paloma.consensus;

option go_package = "github.com/palomachain/paloma/x/consensus/types";

// message for storing the queued signed message in the internal queue
message QueuedSignedMessage {
  option (gogoproto.goproto_stringer) = false;

  uint64 id = 1;
  int64 addedAtBlockHeight = 2;
  google.protobuf.Timestamp addedAt = 3
      [ (gogoproto.nullable) = false, (gogoproto.stdtime) = true ];
  google.protobuf.Any msg = 4;
  bytes bytesToSign = 5;
  repeated SignData signData = 6;
  repeated Evidence evidence = 7;
  PublicAccessData publicAccessData = 8;
  bool requireSignatures = 9;
  ErrorData errorData = 10;

  // block height at which the message was assinged to the
  // current relayer. Updated when message is reassigned.
  string handled_at_block_height = 11 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = true
  ];
}

message BatchOfConsensusMessages { google.protobuf.Any msg = 1; }

message Batch {
  repeated google.protobuf.Any msgs = 1;
  bytes bytesToSign = 2;
}

message SignData {
  bytes valAddress = 1 [ (gogoproto.casttype) =
                             "github.com/cosmos/cosmos-sdk/types.ValAddress" ];
  bytes signature = 2;
  bytes extraData = 3;

  string externalAccountAddress = 4;

  bytes publicKey = 5;
}

message Evidence {
  bytes valAddress = 1 [ (gogoproto.casttype) =
                             "github.com/cosmos/cosmos-sdk/types.ValAddress" ];

  google.protobuf.Any proof = 2;
}

message PublicAccessData {
  bytes valAddress = 1 [ (gogoproto.casttype) =
                             "github.com/cosmos/cosmos-sdk/types.ValAddress" ];
  bytes data = 2;
}

message ErrorData {
  bytes valAddress = 1 [ (gogoproto.casttype) =
                             "github.com/cosmos/cosmos-sdk/types.ValAddress" ];
  bytes data = 2;
}
