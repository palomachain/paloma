syntax = "proto3";
package palomachain.paloma.evm;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "palomachain/paloma/valset/common.proto";
import "palomachain/paloma/evm/params.proto";
option go_package = "github.com/palomachain/paloma/x/evm/types";

service Msg {
    rpc DeployNewSmartContract(MsgDeployNewSmartContractRequest) returns (DeployNewSmartContractResponse);
    rpc RemoveSmartContractDeployment(MsgRemoveSmartContractDeploymentRequest) returns (RemoveSmartContractDeploymentResponse);
    rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

message MsgDeployNewSmartContractRequest {
  string creator = 1 [deprecated = true];
  string title = 2;
  string description = 3;
  
  string abiJSON = 4; 
  string bytecodeHex = 5; 

  palomachain.paloma.valset.MsgMetadata metadata = 6 [(gogoproto.nullable) = false];
}
message DeployNewSmartContractResponse {}

message MsgRemoveSmartContractDeploymentRequest {
  string Sender = 1 [deprecated = true];
  uint64 smartContractID = 2;
  string chainReferenceID = 3;

  palomachain.paloma.valset.MsgMetadata metadata = 4 [(gogoproto.nullable) = false];
}
message RemoveSmartContractDeploymentResponse {}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/evm parameters to update.
  Params params = 2 [(gogoproto.nullable) = false];
}

message MsgUpdateParamsResponse {}