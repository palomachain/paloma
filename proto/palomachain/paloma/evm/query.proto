syntax = "proto3";
package palomachain.paloma.evm;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "palomachain/paloma/evm/params.proto";
import "palomachain/paloma/evm/turnstone.proto";
import "palomachain/paloma/evm/chain_info.proto";

option go_package = "github.com/palomachain/paloma/x/evm/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/palomachain/paloma/evm/params";
  }
  // Queries a list of GetValsetByID items.
  rpc GetValsetByID(QueryGetValsetByIDRequest)
      returns (QueryGetValsetByIDResponse) {
    option (google.api.http).get =
        "/palomachain/paloma/evm/get_valset_by_id/{valsetID}";
  }

  // Queries a list of ChainsInfos items.
  rpc ChainsInfos(QueryChainsInfosRequest) returns (QueryChainsInfosResponse) {
    option (google.api.http).get = "/palomachain/paloma/evm/chains_infos";
  }

  // Queries a list of QueryGetSmartContract items.
  rpc QueryGetSmartContract(QueryGetSmartContractRequest)
      returns (QueryGetSmartContractResponse) {
    option (google.api.http).get =
        "/palomachain/paloma/evm/query_get_smart_contract/{smartContractID}";
  }

  // Queries a list of QueryGetSmartContractDeployments items.
  rpc QueryGetSmartContractDeployments(QueryGetSmartContractDeploymentsRequest)
      returns (QueryGetSmartContractDeploymentsResponse) {
    option (google.api.http).get =
        "/palomachain/paloma/evm/query_get_smart_contract_deployments";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryGetValsetByIDRequest {
  uint64 valsetID = 1;
  string chainReferenceID = 2;
}

message QueryGetValsetByIDResponse { Valset valset = 1; }

message QueryChainsInfosRequest {}

message QueryChainsInfosResponse { repeated ChainInfo chainsInfos = 1; }

message QueryGetSmartContractRequest { uint64 smartContractID = 1; }

message QueryGetSmartContractResponse {
  uint64 ID = 1;
  string abi = 2;
  bytes bytecode = 3;
}

message QueryGetSmartContractDeploymentsRequest {}

message QueryGetSmartContractDeploymentsResponse {
  repeated SmartContractDeployment deployments = 1;
}
