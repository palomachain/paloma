syntax = "proto3";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

package palomachain.paloma.evm;

option go_package = "github.com/palomachain/paloma/x/evm/types";

message Valset {
  // hex addresses on the EVM network
  repeated string validators = 1;
  repeated uint64 powers = 2;
  uint64 valsetID = 3;
}

message SubmitLogicCall {
  message ExecutionRequirements { bool enforceMEVRelay = 1; }
  string hexContractAddress = 1;
  bytes abi = 2;
  bytes payload = 3;
  int64 deadline = 4;
  bytes senderAddress = 5;
  bytes contractAddress = 6;
  ExecutionRequirements executionRequirements = 7
      [ (gogoproto.nullable) = false ];
  uint32 retries = 8;
}

message UpdateValset { Valset valset = 1; }

message UploadSmartContract {
  bytes bytecode = 1;
  string abi = 2;
  bytes constructorInput = 3;

  uint64 id = 4;
}

message Message {
  // Previous definitions no longer in use.
  reserved 8;
  reserved "transferERC20Ownership";

  string turnstoneID = 1;
  string chainReferenceID = 2;

  oneof action {
    SubmitLogicCall submitLogicCall = 3;
    UpdateValset updateValset = 4;
    UploadSmartContract uploadSmartContract = 5;
  }

  string compassAddr = 6;
  string assignee = 7;

  // block height at which the message was assinged to the
  // current relayer. Updated when message is reassigned.
  string assigned_at_block_height = 9 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (amino.dont_omitempty) = true,
    (gogoproto.nullable) = false
  ];
}

message TxExecutedProof { bytes serializedTX = 1; }

message SmartContractExecutionErrorProof { string errorMessage = 1; }

// This is no longer in active use.
message TransferERC20Ownership {
  option deprecated = true;
  uint64 smartContractID = 1;
  bytes newCompassAddress = 2;
}
